/* ========================================================================== *
 * (C) Copyright 2019 Robert Grimm
 * ========================================================================== */

/*
 * CSS CUSTOM PROPERTIES
 * ---------------------
 *
 * Edge >= 16; Firefox >= 31; Google Chrome >= 49; Safari >= 9.1;
 * iOS Safari >= 9.3; Google Chrome for Android >= 49; UC Browser Android 11.8;
 * Samsung Internet >= 5;
 *
 * PREFIXES
 * --------
 *
 * @-webkit-keyframes
 * -webkit-animation
 * -webkit-filter
 * -moz-font-feature-settings, -webkit-font-feature-settings
 * -ms-hyphens, -moz-hyphens, -webkit-hyphens
 * -o-object-fit
 * -webkit-text-decoration-color
 * -webkit-transform
 */

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-regular.woff2),
    url(fonts/bely-regular.woff);
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-italic.woff2),
    url(fonts/bely-italic.woff);
  font-style: italic;
  font-weight: normal;
  font-display: swap;
}

/*
@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-bold.woff2),
    url(fonts/bely-bold.woff);
  font-style: normal;
  font-weight: bold;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-bold-italic.woff2),
    url(fonts/bely-bold-italic.woff);
  font-style: italic;
  font-weight: bold;
  font-display: swap;
}*/

@font-face {
  font-family: 'Bely Display';
  src: url(fonts/bely-display.woff2),
    url(fonts/bely-display.woff);
  font-style: normal;
  font-weight: bold;
  font-display: fallback;
}

@font-face {
  font-family: 'Bild';
  src: url(fonts/bild-variable.woff2),
    url(fonts/bild-variable.woff);
  font-style: normal;
  font-weight: bold;
  font-stretch: 60% 100%;
  font-display: fallback;
}

@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(fonts/bluu-suuperstar-medium.woff2),
    url(fonts/bluu-suuperstar-medium.woff);
  font-style: normal;
  font-weight: 500;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(fonts/bluu-suuperstar-bold.woff2),
    url(fonts/bluu-suuperstar-bold.woff);
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
}*/

@font-feature-values Bluu Suuperstar {
  @styleset {
    bluu: 1 3;
  }
}

@font-face {
  font-family: 'Reforma 2018';
  src: url(fonts/reforma-2018-gris.woff2),
    url(fonts/reforma-2018-gris.woff);
  font-style: normal;
  font-weight: normal;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Reforma 2018';
  src: url(fonts/reforma-2018-gris-italica.woff2),
    url(fonts/reforma-2018-gris-italica.woff);
  font-style: italic;
  font-weight: normal;
  font-display: fallback;
}*/

/* -------------------------------------------------------------------------- *
 * Sane Sizing
 * -------------------------------------------------------------------------- */

* {
  padding: 0;
  margin: 0;
}

*:before, *, *:after {
  box-sizing: inherit;
}

:root {
  box-sizing: border-box;

  /* ------------------------------------------------------------------------ *
   * Modular Scale
   * ------------------------------------------------------------------------ */

  --r-minor: 1.2;
  --r-major: 1.5;

  --t05: calc(1em / var(--r-minor));         /*  0.8333  */
  --t10: calc(1em / var(--r-major));         /*  0.66667 */
  --t15: calc(var(--t10) / var(--r-minor));  /*  0.55556 */
  --t20: calc(var(--t10) / var(--r-major));  /*  0.44444 */
  --t30: calc(var(--t20) / var(--r-major));  /*  0.29630 */
  --t40: calc(var(--t30) / var(--r-major));  /*  0.19753 */
  --t50: calc(var(--t40) / var(--r-major));  /*  0.13169 */
  --t60: calc(var(--t50) / var(--r-major));  /*  0.10974 */

  --s05: calc(var(--r-minor) * 1em);         /*  1.2     */
  --s10: calc(var(--r-major) * 1em);         /*  1.5     */
  --s15: calc(var(--r-minor) * var(--s10));  /*  1.8     */
  --s20: calc(var(--r-major) * var(--s10));  /*  2.25    */
  --s30: calc(var(--r-major) * var(--s20));  /*  3.375   */
  --s40: calc(var(--r-major) * var(--s30));  /*  5.0625  */
  --s50: calc(var(--r-major) * var(--s40));  /*  7.59375 */
  --s60: calc(var(--r-major) * var(--s50));  /* 11.39063 */
  --s70: calc(var(--r-major) * var(--s60));  /* 17.08594 */
  --s80: calc(var(--r-major) * var(--s70));  /* 25.62891 */

  --min-margin: 0.5em;
  --max-measure: 29em;
  /*
   * Bely has low x-height, hence we set a relatively large root font size.
   * If so desired, use factors to scale other fonts. Beware of meh visual
   * results, especially for Bluu Suuperstar.
   */
  --scale-to-reforma: 0.8281;
  --scale-to-bluu: 0.826.2;

  --margin-text-top: 1em;

  /* ------------------------------------------------------------------------ *
   * Colors
   * ------------------------------------------------------------------------ */

  --color-white: #f6f6f8;
  --color-grey1: #e3e7ed;
  --color-grey2: #e0e0e0;
  --color-grey3: #a0a0a0;
  --color-grey4: #404040;
  --color-blackish: #222225;
  --color-black: #1d1d20;
  --color-none: #000;
  --color-yellow: #fff143;
  --color-cyan: #2bfff4;
  --color-green: #35ff61;

  --color-fg: var(--color-black);
  --color-bg: var(--color-white);
  --color-bg-offset: var(--color-grey1);
  --color-bg-hdr-ftr: var(--color-grey2);
  --color-separator: var(--color-grey3);
  --color-accent1: var(--color-cyan);
  --color-accent2: var(--color-green);
  --color-accent3: #ff82e8;
  --color-accent4: #ffb74a;
  --color-accent5: var(--color-yellow);
}

/* Don't even think to print dark color scheme! */
@media screen and (prefers-color-scheme: dark) {
  :root {
    --color-fg: var(--color-grey1);
    --color-bg: var(--color-blackish);
    --color-bg-offset: var(--color-grey4);
    --color-bg-hdr-ftr: var(--color-none);
    /* --color-separator stays as var(--color-grey3). */
    --color-accent1: #970202;
    --color-accent2: #830183;
    --color-accent3: #8039c9;
    --color-accent4: #4739c9;
    --color-accent5: #2c8672;
  }
}

@media print {
  :root {
    --color-fg: #000;
    --color-bg: transparent;
  }
}


.gradient1 {
  background-color: var(--color-accent1);
  background-image: linear-gradient(to right,
    var(--color-accent1) 10%, var(--color-accent2) 90%);
  background-attachment: fixed;
}

.gradient2 {
  background-color: var(--color-accent3);
  background-image: linear-gradient(to right,
    var(--color-accent3) 10%, var(--color-accent4) 90%);
  background-attachment: fixed;
}

/* ========================================================================== *
 * Proper Typography
 * ========================================================================== */

:root {
  --system-fontstack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
    'Helvetica Neue', sans-serif;

  /* Bely and Bluu only have Times as understudy. It's bruutal. */
  --bely-fontstack: 'Bely', 'Times New Roman', serif;
  --bely-display-fontstack:
      'Bely Display', 'Abril Fatface', 'Playfair Display', serif;
  --bild-fontstack: 'Bild', system-ui, sans-serif;
  --bluu-fontstack: 'Bluu Suuperstar', 'Times New Roman', serif;

  /* Luckily, both Bely and Reforma support kerning, default ligatures, lining
     as well as old-style numerals, and case-sensitive alternates. */
  --font-features-core: 'kern', 'liga', 'case';
  --font-features-text: 'onum', var(--font-features-core);
  --font-features-standout: 'lnum', var(--font-features-core);
  --font-features-bluu: 'ss01', 'ss03', var(--font-features-standout);

  /* ------------------------------------------------------------------------ */

  font-family: var(--bely-fontstack);
  font-size-adjust: 0.453;
  font-synthesis: none;

  font-size: 118.75%;
  -webkit-text-size-adjust: 100%;
  line-height: var(--r-major);
}

/* calc((var(--max-measure) + 2 * var(--min-margin)) * 118.75%) */
@media (min-width: 35.625em) {
  :root {
    font-size: 131.25%;
  }
}

@media print {
  :root {
    font-size: 100%;
  }
}

li, :not(.pullquote) > p {
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

li {
  /* Hanging punctuation at start of first line interferes with marker. */
  hanging-punctuation: last allow-end;
}

p {
  hanging-punctuation: first allow-end last;
}

/* -------------------------------------------------------------------------- */

@supports not (font-variant: oldstyle-nums common-ligatures) {
  body {
    -webkit-font-feature-settings: var(--font-features-text);
    font-feature-settings: var(--font-features-text);
  }
}

@supports (font-variant: oldstyle-nums common-ligatures) {
  body {
    font-variant: oldstyle-nums common-ligatures;
  }
}

/* -------------------------------------------------------------------------- */

@supports not (font-variant-caps: all-small-caps) {
  abbr,
  .byline,
  .capped span:first-child,
  .roman {
    -webkit-font-feature-settings:'smcp', 'c2sc', var(--font-features-standout);
    font-feature-settings: 'smcp', 'c2sc', var(--font-features-standout);
  }

  .capped::first-letter {
    -webkit-font-feature-settings: var(--font-features-standout);
    font-feature-settings: var(--font-features-standout);
  }
}

@supports (font-variant-caps: all-small-caps) {
  abbr,
  .byline,
  .capped span:first-child,
  .roman {
    font-variant-caps: all-small-caps;
  }

  .capped::first-letter {
    font-variant-caps: normal;
  }
}

/* -------------------------------------------------------------------------- */

/* 13<sup>th</sup> if font supports superscript */
sup {
  font-size: 100%;
  vertical-align: baseline;
}

@supports not (font-variant-position: super) {
  sup {
    -webkit-font-feature-settings: 'sups', var(--font-features-text);
    font-feature-settings: 'sups', var(--font-features-text);
  }
}

@supports (font-variant-position: super) {
  sup {
    font-variant-position: super;
  }
}

/*
 * 13<sup class=ordinal>th</sup> if font supports ordinals,
 * notably English ones. Bely does.
 */
@supports not (font-variant-numeric: ordinal) {
  .ordinal {
    -webkit-font-feature-settings: 'ordn', var(--font-features-text);
    font-feature-settings: 'ordn', var(--font-features-text);
  }
}

@supports (font-variant-numeric: ordinal) {
  .ordinal {
    font-variant-position: normal;
    font-variant-numeric: ordinal;
  }
}

/* -------------------------------------------------------------------------- */

@supports not (font-variant: lining-nums common-ligatures) {
  h1, h2, h3 {
    -webkit-font-feature-settings: var(--font-features-standout);
    font-feature-settings: var(--font-features-standout);
  }
}

@supports (font-variant: lining-nums common-ligatures) {
  h1, h2, h3 {
    font-variant: lining-nums common-ligatures;
  }
}

.belyssimo h1, .belyssimo h2 {
  font-family: var(--bely-display-fontstack);
}

.belyssimo h3 {
  font-family: var(--bely-fontstack);
}

.bild h1, .bild h2, .bild h3, .bild .pullquote strong {
  font-family: var(--bild-fontstack);
}

.bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
  font-family: var(--bluu-fontstack);
  font-weight: 500;
}

@supports not (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
    -webkit-font-feature-settings: var(--font-features-bluu);
    font-feature-settings: var(--font-features-bluu);
  }
}

@supports (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
    font-variant-alternates: styleset(bluu);
  }
}

.reforma h1, .reforma h2, .reforma h3 {
  font-family: 'Reforma 2018', var(--system-fontstack);
}

/* ========================================================================== *
 * Keeping Up Appearances
 * ========================================================================== */

abbr[title] {
  border-bottom: none;
  text-decoration: none;
}

body {
  color: #201d1d;
  color: var(--color-fg);
  background-color: #f6f6f8;
  background-color: var(--color-bg);
}

dfn {
  font-style: italic;
}

main {
  display: block;
  margin-bottom: var(--s03);
}

main > p,
main .heading,
main section > *,
main footer > * {
  max-width: calc(var(--max-measure) + 2 * var(--min-margin));
  margin: var(--margin-text-top) auto 0 auto;
  padding: 0 var(--min-margin);
}

::-moz-selection {
  background-color: #fff143;
  background-color: var(--color-accent5);
}

::selection {
  background-color: #fff143;
  background-color: var(--color-accent5);
}

.signature {
  text-align: right;
  font-style: italic;
}

.signature::before {
  content: '—';
}

.signature > * {
  font-size: var(--s05);
}

.standout {
  -webkit-font-feature-settings: var(--font-features-standout);
  font-feature-settings: var(--font-features-standout);
}

/* ========================================================================== *
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * ========================================================================== */

/* -------------------------------------------------------------------------- *
 * a:not(.stylish)
 * -------------------------------------------------------------------------- */

a:not(.stylish) {
  transition: all 0.1s ease-in;
  text-decoration: underline;
}

a:not(.stylish):link, a:not(.stylish):visited {
  color: var(--color-fg);
  -webkit-text-decoration-color: var(--color-fg);
  text-decoration-color: var(--color-fg);
  background-color: transparent;
}

a:not(.stylish):focus, a:not(.stylish):hover {
  outline: none;
  color: var(--link-focus-fg, var(--color-bg));
  -webkit-text-decoration-color: transparent;
  text-decoration-color: transparent;
  background-color: var(--link-focus-bg, var(--color-fg));
}

a:not(.stylish):active {
  color:
    var(--link-active-fg, var(--link-focus-fg, var(--color-fg)));
  background-color:
    var(--link-active-bg, var(--link-focus-bg, var(--color-fg)));
}

/* -------------------------------------------------------------------------- *
 * .as-paragraph (flow <p> and <li> into one paragraph with Oxford comma)
 * -------------------------------------------------------------------------- */

.as-paragraph {
  hanging-punctuation: first allow-end last;
}

.as-paragraph p, .as-paragraph ul, .as-paragraph li {
  display: inline;
  list-style: none;
  margin: 0;
  padding: 0;
}

.conjunctive li::after {
  content: ',';
}

.conjunctive li:nth-last-child(2)::after {
  content: ', and ';
}

.conjunctive li:last-child::after {
  content: '.';
}

/* -------------------------------------------------------------------------- *
 * .banner: the art of making banners out of text
 * -------------------------------------------------------------------------- */

.banner {
  padding: 0 0.2em;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

/* -------------------------------------------------------------------------- *
 * .byline
 * -------------------------------------------------------------------------- */

.byline {
  display: flex;
  justify-content: space-between;
  max-width: calc(var(--max-measure) + 2 * var(--min-margin));
  /* Top margin is logical equivalent of (nav.barred + main)'s top margin. */
  margin: var(--s30) auto var(--s10) auto;
  padding: 0 var(--min-margin);
  line-height: var(--r-major);
}

address {
  font-style: normal;
}

/* -------------------------------------------------------------------------- *
 * .capped
 * -------------------------------------------------------------------------- */

@supports not (initial-letter: 2) {
  .capped::first-letter {
    float: left;
    font-size: 3.3em;
    line-height: 0.825;
    font-weight: normal;
    padding-right: 0.06em;
  }
}

@supports (not (initial-letter: 2)) and (-moz-appearance: none) {
  .capped::first-letter {
    margin-top: 0.10em;
  }
}

@supports (initial-letter: 2) {
  .capped::first-letter {
    initial-letter: 2;
  }
}

/* -------------------------------------------------------------------------- *
 * .card, .carddeck
 * -------------------------------------------------------------------------- */

/*
 * The non-breaking space in "<h3><a>&nbsp;<span>..." is strictly necessary.
 * Otherwise, Safari treats <a> as empty, doesn’t activate the link, and skips
 * it during keyboard navigation. The non-breaking space is enough of a
 * character to convince Safari of link-worthiness. But it also is easy enough
 * to hide.
 */

/* >>>>>>>>>> The Layout is Flex, but right-aligned and wrapping. <<<<<<<<<< */

.carddeck {
  max-width: unset;
  margin: var(--s30) 0 0 0;
  padding: 0;
  width: 100%;
  list-style: none;
}

.card {
  max-width: calc(var(--r-minor) * var(--s70)); /* CardMax */
  position: relative;
  width: 100%;
  margin: var(--s20) auto 0 auto;
}

/*
 * Break iff: x/2 - MaxMeasure/2 = x - 2 CardMax - 2 S[10]
 *     2 CardMax + 2 S[10] - MaxMeasure/2 = x - x/2
 *     x = 4 CardMax + 4 S[10] - MaxMeasure
 *     x = 4 * 1.2 * 17.0859 + 4 * 1.5 - 29   [em]
 *     x = 82.01232 + 6 - 29   [em]
 *     x = 59.01232   [em]
 *     x = 77.45367 browser root em
 *
 * Setting the padding on the right does not work here because of the
 * vertical scroll bar. Thankfully, setting the width is all that's
 * required, since the box model keeps the box left-aligned by default.
 */
@media (min-width: 77.45em) {
  .carddeck {
    width: calc(50vw + var(--max-measure) / 2);
    margin: calc(var(--s30) - var(--s10)) 0 0 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    /* Safari and Chrome pretend to accept end, but don't act on it. */
    justify-content: flex-end;
    overflow-y: hidden;
  }

  .card {
    margin: var(--s10) 0 0 var(--s10);
  }
}

/* >>>>>>>>>> The link & hover effect cover entire card. <<<<<<<<<< */

.card > h3 {
  font-family: var(--bely-fontstack);
  font-size: var(--s05);
  font-style: normal;
  line-height: var(--r-minor);
  margin: 0;
}

.card > h3 > a, .card > h3 > a::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* >>>>>>>>>> The hover effect is opacity only. <<<<<<<<<< */

.card > h3 > a {
  text-decoration: none;
  z-index: 665;
}

.card > h3 > a:focus,
.card > h3 > a:hover {
  outline: none;
}

.card > h3 > a::before {
  content: '';
  border: solid var(--t10) var(--color-green);
  opacity: 0;
}

@media screen and (prefers-color-scheme: dark) {
  .card > h3 > a::before {
    border: solid var(--t10) var(--color-accent1);
  }
}

.card > h3 > a:focus::before,
.card > h3 > a:hover::before {
  opacity: 1;
}

/* >>>>>>>>>> The nested headline is presented on top of image. <<<<<<<<<< */

.card > h3 > a > span {
  position: absolute;
  top: var(--t15);
  left: var(--t15);
  padding: var(--t50);
  color: var(--color-fg);
  background-color: var(--color-bg);
}

.card > h3 > a > span:nth-child(2) {
  top: calc(var(--t15) + var(--s15));
}

@media screen and (prefers-color-scheme: dark) {
  .card > h3 > a > span {
    background-color: var(--color-bg-offset);
  }
}

/* >>>>>>>>>> Image aspect ratio is normalized to modular rhythm. <<<<<<<<<< */

.card > .image {
  position: relative;
  padding-top: calc(100% / var(--r-major));
  width: 100%;
  overflow: hidden;
  filter: grayscale(0.5);
}

/*
 * When absolutely positioning images on an aspect ratio frame,
 * the how matters. object-fit and object-position will not work
 * if top/right/bottom/left was used. Thankfully, top/left/width/height
 * do work.
 */
.card > .image > img, .card > .image > svg {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

/* >>>>>>>>>> There even is a space for a tagline below the image. <<<<<<<<<< */

.card > .description {
  padding: var(--t05);
  background-color: var(--color-bg-offset);
  text-align: right;
  line-height: 1;
}

/* -------------------------------------------------------------------------- *
 * .cover
 * -------------------------------------------------------------------------- */

.cover {
  line-height: 0;
}

.cover img, .cover svg {
  width: 100vw;
  height: 100vh;
  /* To allow for <h1>, <img> in that order. */
  z-index: -1;
}

.cover img {
  -o-object-fit: cover;
  object-fit: cover;
}

.cover .title {
  position: absolute;
  /* Navigation and headline may compete for pointer. */
  pointer-events: none;
}

.cover h1, .cover p {
  line-height: var(--r-minor);
  /* Reset margin and padding to simplify per-page styling. */
  margin: 0;
  padding: 0;
}

/* -------------------------------------------------------------------------- *
 * figcaption
 * -------------------------------------------------------------------------- */

figcaption::before {
  content: '—';
}

figcaption {
  font-size: var(--t05);
  height: calc(var(--r-minor) * var(--s10));
  text-align: right;
  font-style: italic;
  padding-top: 0.3em;
}

@supports (-moz-appearance: none) {
  /* Firefox is more precise than Chrome/Safari, needs different constant. */
  figcaption {
    padding-top: 0.25em;
  }
}

/* -------------------------------------------------------------------------- *
 * h1, h2, and h3
 * -------------------------------------------------------------------------- */

h1, h2, h3 {
  font-style: normal;
  font-weight: normal;
  line-height: var(--r-minor);
}

h1 {
  font-size: var(--s20);
  margin-bottom: calc(var(--r-major) * 1rem);
}

h2 {
  font-size: var(--s10);
  margin-top: calc(var(--r-major) * var(--r-minor) * 1rem);
  margin-bottom: calc(var(--r-minor) * 1rem);
}

.bild h2 {
  font-size: var(--s15);
  font-stretch: 95%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

.bild h3 {
  font-size: var(--s10);
  font-style: normal;
  font-stretch: 100%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

@supports (-moz-appearance: none) {
  .bild h2 {
    font-size: calc(var(--r-minor) * var(--s15));
  }

  .bild h3 {
    font-size: calc(var(--r-minor) * var(--s10));
  }
}

/* -------------------------------------------------------------------------- *
 * [hidden], .visually-hidden
 * -------------------------------------------------------------------------- */

[hidden] {
  display: none;
}

/* See https://zellwk.com/blog/hide-content-accessibly/ */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

/* -------------------------------------------------------------------------- *
 * hr
 * -------------------------------------------------------------------------- */

hr {
  color: var(--color-fg);
  border: none;
  /* Prevent Safari from making <hr> one 1px too large. */
  height: var(--s10);
  text-align: center;
  margin-top: var(--s20);
  margin-bottom: var(--s20);

  --sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);
  --amp: calc(var(--s10) / 4);
  --rot: 10deg;

  -webkit-transform: translateY(0.5em);
  transform: translateY(0.5em);
  -webkit-animation:
    10s var(--sine) infinite up-down;
  animation:
    10s var(--sine) infinite up-down;
}

hr::after {
  font-size: var(--s05);
  line-height: var(--r-minor);
  display: inline-block;
  content: '⁂';

  -webkit-transform: rotate(calc(-1 * var(--rot)));
  transform: rotate(calc(-1 * var(--rot)));
  -webkit-animation:
    10s var(--sine) -6.25s infinite back-forth;
  animation:
    10s var(--sine) -6.25s infinite back-forth;
}

/* And action! */
@-webkit-keyframes up-down {
  50% { -webkit-transform: translateY(calc(-1 * var(--amp)));
                transform: translateY(calc(-1 * var(--amp))); } }
@keyframes up-down {
  50% { -webkit-transform: translateY(calc(-1 * var(--amp)));
                transform: translateY(calc(-1 * var(--amp))); } }

@-webkit-keyframes back-forth {
  50% { -webkit-transform: rotate(var(--rot));
                transform: rotate(var(--rot)); } }
@keyframes back-forth {
  50% { -webkit-transform: rotate(var(--rot));
                transform: rotate(var(--rot)); } }

/* Respect the user's wishes! */
@media (prefers-reduced-motion: reduce) {
  hr, hr::after { -webkit-animation: none; animation: none; }
}

/* -------------------------------------------------------------------------- *
 * .inset-left, .inset-right
 * -------------------------------------------------------------------------- */

img {
  display: block;
  max-width: 100%;
  border-style: none;
}

.with-inset p + p {
  margin-top: var(--margin-text-top);
}

/* The surrounding <div class=with-inset> also contains the floats. */
.with-inset::after {
  content: '';
  clear: both;
}

/*
 * For this class to work, <header>, <section>, and <footer> elements
 * containing such an inset-image must have their max-width and margin
 * set by the container.
 */

.inset-left {
  margin-right: var(--min-margin);
  float: left;
  width: calc(7 * var(--s10));
  max-height: calc(8 * var(--s10));
}

.inset-right {
  margin-left: var(--min-margin);
  float: right;
  width: calc(7 * var(--s10));
  max-height: calc(8 * var(--s10));
}

@supports not (-moz-appearance: none) {
   /* Counteract rounding errors in Safari and Chrome. */
  .inset-left, .inset-right {
    width: calc(7 * var(--s10) - 5px);
  }
}

/* calc((var(--max-measure) + 2 * 10.5em + 4 * 1.5em) * 131.25%) */
@media (min-width: 73.5em) {
  .inset-left {
    /* Not strictly necessary but eliminates weird dev tools appearance. */
    margin-right: 0;
    /* Consider reducing to -7 * s10 - 1em, requires change to .byline. */
    margin-left: calc(-8 * var(--s10));
  }
  .inset-right {
    margin-left: 0;
    margin-right: calc(-8 * var(--s10));
  }
}

/* -------------------------------------------------------------------------- *
 * .large-image
 * -------------------------------------------------------------------------- */

 /* No --min-margin for images! */
.large-image {
  max-width: calc(var(--max-measure) + 2 * var(--s30));
  margin: var(--s10) auto;
}

.large-image figcaption { padding-right: var(--min-margin); }
@media (min-width: 49.22em) {
  .large-image figcaption { padding-right: 0; }
}

/* -------------------------------------------------------------------------- *
 * ol, ul
 * -------------------------------------------------------------------------- */

main ol {
  list-style: none;
  counter-reset: ol;
}

main ul {
  margin-top: var(--margin-text-top);
}

main ol > li {
  counter-increment: ol;
  margin-top: var(--margin-text-top);
}

main ol > li::before {
  content: '(' counter(ol) ') ';
  -webkit-font-feature-settings: var(--font-features-standout);
  font-feature-settings: var(--font-features-standout);
}

main ul > li {
  margin-left: var(--margin-text-top);
}

/*
 * calc((
 *     var(--max-measure)
 *     + 2 * var(--min-margin)
 *     + 2 * var(--s10)
 * ) * 131.25%)
 */
@media (min-width: 43.3125em) {
  main ol > li {
    position: relative;
  }

  main ol > li::before {
    position: absolute;
    left: calc(-1 * var(--s10));
  }

  main ul > li {
    margin-left: 0;
  }
}

/* -------------------------------------------------------------------------- *
 * .page-footer
 * -------------------------------------------------------------------------- */

.page-footer {
  margin: var(--s30) 0 0 0;
  padding: var(--margin-text-top) var(--min-margin);
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  background-color: var(--color-bg-hdr-ftr);
}

.in-here, .out-there {
  width: 50%;
  line-height: calc(var(--r-major) * var(--r-major));
}

@media (pointer: fine) {
  .in-here, .out-there {
    font-size: var(--t05);
    line-height: var(--r-major);
  }
}

.page-footer h2 {
  font-size: var(--s05);
  font-stretch: 100%; /* Otherwise, Bild becomes too hard to read. */
  margin: var(--t40) 0;
}

.bild .page-footer h2 {
  font-size: var(--s10);
}

.reforma .page-footer h2 {
  font-size: calc(var(--scale-to-reforma) * var(--s05));
}

.page-footer ul {
  list-style: none;
  margin: 0 0 var(--t40) 0;
}

.in-here {
  padding-right: 0.44em;
  border-right: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: right;
}

.out-there {
  padding-left: 0.44em;
   border-left: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: left;
}

.copyright {
  margin-top: var(--margin-text-top);
  font-size: var(--t05);
}

/* Make the page footer sticky on short pages, i.e., error pages. */

html {
  height: 100%;
}

body {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

/*
 * Firefox hates flexbox when it comes to printing,
 * only printing the first page. Nuts!
 */
@media print {
  @supports (-moz-appearance: none) {
    body {
      display: block;
    }
  }
}

/* -------------------------------------------------------------------------- *
 * .page-header
 * -------------------------------------------------------------------------- */

.page-header {
  line-height: 0;
}

.page-header a {
  display: block;
  padding: calc((var(--s20) - var(--s05)) / 2);
  text-decoration: none;
  outline: none;
}

.page-header svg {
  height: var(--s05);
  width: var(--s05);
}

.page-header.barred {
  height: var(--s20);
  width: 100%;
  background-color: var(--color-bg-hdr-ftr);
}

.page-header.barred > div {
  height: 100%;
  width: 100%;
  max-width: calc(var(--max-measure) + 2 * var(--s40) + 2 * var(--min-margin));
  margin: 0 auto;
  padding:
    0 var(--min-margin);
  display: flex;
  justify-content: left;
}

/*
 * When using a supports query for the actual padding, Chrome 76 and Firefox 68
 * did apply the padding despite not yet supporting the max() function. With
 * this two-clause query, they do not apply the padding—as they should.
 */
@supports (padding: max(1em)) and (padding: env(safe-area-inset-left)) {
  .page-header.barred > div {
    padding:
      0 max(env(safe-area-inset-left), var(--min-margin))
      0 max(env(safe-area-inset-right), var(--min-margin));
  }
}

.page-header.barred a:link, .page-header.barred a:visited {
  color: var(--color-fg);
  fill: var(--color-fg);
  background-color: var(--color-bg);
}

.page-header.barred a:focus, .page-header.barred a:hover {
  color: var(--color-bg);
  fill: var(--color-bg);
  background-color: var(--color-fg);
}

.page-header.barred a:active {
  color: var(--color-fg);
  fill: var(--color-fg);
}

/*
 * Leave a large space between navigation bar and main content.
 * For .page-header.cornered, .byline declares the logical equivalent.
 */
.page-header.barred + main {
  margin-top: calc(var(--s30) - var(--margin-text-top));
}

.page-header.cornered {
  position: absolute;
  top: 2vmin;
  left: 2vmin;
}

@supports (left: max(1em)) and (left: env(safe-area-inset-left)) {
  .page-header.cornered {
    left: max(env(safe-area-inset-left), 2vmin);
  }
}

.page-header.cornered a:link,
.page-header.cornered a:visited {
  color: var(--color-black);
  background-color: var(--color-white);
}

.page-header.cornered a:focus,
.page-header.cornered a:hover {
  color: var(--color-white);
  background-color: var(--color-black);
}

.page-header.cornered a:active {
  color: var(--color-black);
}

.page-header.cornered [rel="home"]:link,
.page-header.cornered [rel="home"]:visited {
  fill: var(--color-black);
  background-color: var(--nav-hilite, var(--color-white));
}

.page-header.cornered [rel="home"]:focus,
.page-header.cornered [rel="home"]:hover {
  fill: var(--nav-hilite, var(--color-white));
  background-color: var(--color-black);
}

.page-header.cornered [rel="home"]:active {
  fill: var(--color-black);
}

/* -------------------------------------------------------------------------- *
 * .pullquote
 * -------------------------------------------------------------------------- */

.pullquote {
  max-width: calc(var(--max-measure) + 2 * var(--s40) + 2 * var(--min-margin));
  margin: var(--s10) auto;
}

@supports not (-moz-appearance: none) {
  .pullquote p {
    /*
     * Safari doesn't account for inline padding when breaking lines. To
     * prevent overflow, we reduce the max-width by an upper bound. Sadly,
     * there seems to be no feature query to select only Safari. Chrome is
     * thus impacted as well.
     */
    max-width: calc(100% - 0.5em);
  }
}

.pullquote strong {
  font-size: var(--s20);
  font-weight: normal;
}

.bild .pullquote strong {
  font-stretch: 85%;
}

@supports (-moz-appearance: none) {
  /*
   * In Safari, the pullquote's banner style looks perfectly reasonable
   * with a font size of 2.25em and a line height of 1.5. Notably, it has
   * the right proportion relative to body text in Bely and the gap between
   * lines is about right. In Chrome, that also is the case. In Firefox,
   * however, the font is too small and the gap too large, hence these two
   * adjustments.
   */
  .bild .pullquote strong {
    font-size: calc(var(--r-minor) * var(--s20));
    line-height: var(--r-minor);
  }
}

.reforma .pullquote strong {
  font-size: calc(var(--scale-to-reforma) * var(--s20));
}

/* -------------------------------------------------------------------------- *
 * .quote
 * -------------------------------------------------------------------------- */

.quote {
  max-width: calc(var(--max-measure) - 2 * var(--s10) + 2 * var(--min-margin));
  margin: var(--s10) auto;
}

.quote p::before, .quote p::after {
  font-size: var(--s10);
  line-height: 0;
  position: relative;
}

/*
 * U+275d and U+275e are heavy double turned comma quotes.
 * U+200a is hair space.
 */
.quote p::before { content: '\275d'; padding-right: 0.024em; }
.quote p::after  { content: '\275e'; padding-left:  0.024em; }

/* -------------------------------------------------------------------------- *
 * .section-count
 * -------------------------------------------------------------------------- */

.section-count.start-at-0 {
  counter-reset: h2 -1;
}

.section-count.start-at-1 {
  counter-reset: h2 0;
}

.section-count section {
  counter-increment: h2;
  counter-reset: h3;
}

.section-count h2::before {
  content: counter(h2) '\2002';
}

.section-count h3 {
  counter-increment: h3;
}

.section-count h3::before {
  content: counter(h2) '.' counter(h3) '\2002';
}

footer h2::before, footer h3::before {
  content: none;
}

/* -------------------------------------------------------------------------- *
 * @media print
 * -------------------------------------------------------------------------- */

.references {
  display: none;
}

@media print {
  @page {
    margin-top: var(---s30);
  }

  main {
    margin-bottom: var(--s30);
  }

  .page-header, .page-footer {
    display: none;
  }

  h1 {
    page-break-after: always;
    break-after: always;
  }

  h2, h3 {
    page-break-after: avoid;
    break-after: avoid;
  }

  figure {
    page-break-inside: avoid;
    break-inside: avoid;
  }

  /* Add compact, human-readable references for hyperlinks. */
  main {
    counter-reset: href;
  }

  main a {
    text-decoration: none !important;
    counter-increment: href;
  }

  .print-references main a::after {
    content: ' [' counter(href) ']';
    /* Lining figures look a tad awkward. Omit. */
  }

  /* Disable references for website-internal hyperlinks and references. */
  main a[href^="https://apparebit.com"],
  .references a {
    counter-increment: none;
  }

  .print-references main a[href^="https://apparebit.com"]::after,
  .print-references .references a::after {
    content: none;
  }

  .references {
    display: block;
  }

  .references ol > li {
    margin-top: 0;
    overflow-wrap: break-word;
  }

  .references ol > li::before {
    content: '[' counter(ol) '] ';
    -webkit-font-feature-settings: var(--font-features-standout);
    font-feature-settings: var(--font-features-standout);
  }

  /*
  * calc((
  *     var(--max-measure)
  *     + 2 * var(--min-margin)
  *     + 2 * var(--s20)
  * ) * 131.25%)
  */
  @media (min-width: 45.28125em) {
    .references ol > li {
      position: relative;
    }

    .references ol > li::before {
      position: absolute;
      left: calc(-1 * (var(--s20) + var(--t50)));
      text-align: right;
    }

    .references ul > li {
      margin-left: 0;
    }
  }
}
