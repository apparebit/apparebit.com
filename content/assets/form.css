/* ========================================================================== *
 * (C) Copyright 2019-2021 Robert Grimm, released under the MIT license.
 * ========================================================================== */

/*
 * CSS CUSTOM PROPERTIES
 * ---------------------
 *
 * Edge >= 16; Firefox >= 31; Google Chrome >= 49; Safari >= 9.1;
 * iOS Safari >= 9.3; Google Chrome for Android >= 49; UC Browser Android 11.8;
 * Samsung Internet >= 5;
 *
 * PREFIXES
 * --------
 *
 * -webkit-filter
 * -ms-hyphens, -webkit-hyphens
 * -o-object-fit
 * -webkit-text-decoration-color
 */

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-regular.woff2),
    url(fonts/bely-regular.woff);
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-italic.woff2),
    url(fonts/bely-italic.woff);
  font-style: italic;
  font-weight: normal;
  font-display: swap;
}

/*@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-bold.woff2),
    url(fonts/bely-bold.woff);
  font-style: normal;
  font-weight: bold;
  font-display: swap;
}

@font-face {
  font-family: 'Bely';
  src: url(fonts/bely-bold-italic.woff2),
    url(fonts/bely-bold-italic.woff);
  font-style: italic;
  font-weight: bold;
  font-display: swap;
}*/

@font-face {
  font-family: 'Bely Display';
  src: url(fonts/bely-display.woff2),
    url(fonts/bely-display.woff);
  font-style: normal;
  font-weight: bold;
  font-display: fallback;
}

@font-face {
  font-family: 'Bild';
  src: url(fonts/bild-variable.woff2),
    url(fonts/bild-variable.woff);
  font-style: normal;
  font-weight: bold;
  font-stretch: 60% 100%;
  font-display: fallback;
}

@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(fonts/bluu-suuperstar-medium.woff2),
    url(fonts/bluu-suuperstar-medium.woff);
  font-style: normal;
  font-weight: 500;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Bluu Suuperstar';
  src: url(fonts/bluu-suuperstar-bold.woff2),
    url(fonts/bluu-suuperstar-bold.woff);
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
}*/

@font-feature-values Bluu Suuperstar {
  @styleset {
    bluu: 1 3;
  }
}

@font-face {
  font-family: 'Reforma 2018';
  src: url(fonts/reforma-2018-gris.woff2),
    url(fonts/reforma-2018-gris.woff);
  font-style: normal;
  font-weight: normal;
  font-display: fallback;
}

/*
@font-face {
  font-family: 'Reforma 2018';
  src: url(fonts/reforma-2018-gris-italica.woff2),
    url(fonts/reforma-2018-gris-italica.woff);
  font-style: italic;
  font-weight: normal;
  font-display: fallback;
}*/

/* -------------------------------------------------------------------------- *
 * Sane Sizing and Appearance
 * -------------------------------------------------------------------------- */

* {
  padding: 0;
  margin: 0;
}

picture {
  display: block;
}

img {
  display: block;
  border: 0;

  /* https://www.zachleat.com/web/fluid-images/ */
  max-width: 100%;
}
img[width] {
  width: auto;
}
img[width][height] {
  height: auto;
}
/*img[src$=".svg"] {
  width: 100%;
  height: auto;
  max-width: none;
}*/

iframe {
  border: 0;
}

*::before, *, *::after {
  box-sizing: inherit;
}

:root {
  color-scheme: light dark;
  box-sizing: border-box;

  /* ------------------------------------------------------------------------ *
   * Modular Scale
   * ------------------------------------------------------------------------ */

  --r-minor: 1.2;
  --r-major: 1.5;

  --t05: calc(1em / var(--r-minor));         /*  0.8333  */
  --t10: calc(1em / var(--r-major));         /*  0.66667 */
  --t15: calc(var(--t10) / var(--r-minor));  /*  0.55556 */
  --t20: calc(var(--t10) / var(--r-major));  /*  0.44444 */
  --t30: calc(var(--t20) / var(--r-major));  /*  0.29630 */
  --t40: calc(var(--t30) / var(--r-major));  /*  0.19753 */
  --t50: calc(var(--t40) / var(--r-major));  /*  0.13169 */
  --t60: calc(var(--t50) / var(--r-major));  /*  0.10974 */

  --s05: calc(var(--r-minor) * 1em);         /*  1.2     */
  --s10: calc(var(--r-major) * 1em);         /*  1.5     */
  --s15: calc(var(--r-minor) * var(--s10));  /*  1.8     */
  --s20: calc(var(--r-major) * var(--s10));  /*  2.25    */
  --s30: calc(var(--r-major) * var(--s20));  /*  3.375   */
  --s40: calc(var(--r-major) * var(--s30));  /*  5.0625  */
  --s50: calc(var(--r-major) * var(--s40));  /*  7.59375 */
  --s60: calc(var(--r-major) * var(--s50));  /* 11.39063 */
  --s70: calc(var(--r-major) * var(--s60));  /* 17.08594 */
  --s80: calc(var(--r-major) * var(--s70));  /* 25.62891 */

  --min-margin: 0.5rem;
  --max-measure: 29em;
  /*
   * Bely has low x-height, hence we set a relatively large root font size.
   * If so desired, use factors to scale other fonts. Beware of meh visual
   * results, especially for Bluu Suuperstar.
   */
  --scale-to-reforma: 0.8281;
  --scale-to-bluu: 0.8262;

  --margin-text-top: 1em;

  /* ------------------------------------------------------------------------ *
   * Colors
   * ------------------------------------------------------------------------ */

  --color-white: #f3f4f6;
  --color-black: #1d1d20;
  --color-cyan: #2bfff4;
  --color-green: #35ff61;
  --color-yellow: #fff143;
  --color-orange: #ffbb55;
  --color-purple: #fdbafd;
  --color-blue: #bbdefb; /* Dark: #395872 */

  --color-dark-separator:#48484e;

  --color-fg: var(--color-black);
  --color-bg: var(--color-white);
  --color-bg-lifted: #fff;
  /* theme color: e7e9ef, e0e2e5, eceef1 */
  --color-bg-sunk: #e5e6e8; /* d8dce3, e3e5ea */
  --color-separator: #c0c0c0;
  --color-accent1: var(--color-cyan);
  --color-accent2: var(--color-green);
  --color-selection: var(--color-yellow);
  --color-sb-track: #f3f4f6;
  --color-sb-track-border: rgba(0,0,0,0.1);
  --color-sb-thumb: rgba(0,0,0,0.3);
  --color-sb-thumb-hover: rgba(0,0,0,0.5);
}

/* Dark mode only applies to screen, not paper! */
@media screen and (prefers-color-scheme: dark) {
  :root {
    --color-fg: #e3e7ed;
    --color-bg: #222225;
    --color-bg-lifted: #38383d;
    --color-bg-sunk: #101012;
    --color-separator: var(--color-dark-separator);
    --color-accent1: #753f86;
    --color-accent2: #962d56;
    --color-selection: #851d10;
    --color-sb-track: #222225;
    --color-sb-track-border: #38383d;
    --color-sb-thumb: #a0a0a0;
    --color-sb-thumb-hover: #c0c0c0;

     /* Used in cover of "features/ubu-trump" */
    --color-yellow: #f9ec65;
  }

  .cover img, .card img {
    filter: grayscale(0.4);
  }
}

@media print {
  :root {
    --color-fg: #000;
    --color-bg: transparent;
    --color-bg-lifted: transparent;
    --color-bg-sunk: transparent;
  }
}

/* ========================================================================== *
 * Proper Typography
 * ========================================================================== */

:root {
  --system-fontstack: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
    'Helvetica Neue', sans-serif;

  /* Bely and Bluu only have Times as understudy. It's bruutal. */
  --bely-fontstack: 'Bely', 'Times New Roman', serif;
  --bely-display-fontstack:
      'Bely Display', 'Abril Fatface', 'Playfair Display', serif;
  --bild-fontstack: 'Bild', system-ui, sans-serif;
  --bluu-fontstack: 'Bluu Suuperstar', 'Times New Roman', serif;

  /* Luckily, both Bely and Reforma support kerning, default ligatures, lining
     as well as old-style numerals, and case-sensitive alternates. */
  --font-features-core: 'kern', 'liga', 'case';
  --font-features-text: 'onum', var(--font-features-core);
  --font-features-standout: 'lnum', var(--font-features-core);
  --font-features-bluu: 'ss01', 'ss03', var(--font-features-standout);

  /* ------------------------------------------------------------------------ */

  font-family: var(--bely-fontstack);
  font-size-adjust: none;
  font-synthesis: none;
  font-kerning: auto;

  font-size: 118.75%;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  line-height: var(--r-major);
}

/* calc((var(--max-measure) + 2 * var(--min-margin)) * 118.75%) */
@media (min-width: 35.625em) {
  :root {
    font-size: 131.25%;
  }
}

@media print {
  :root {
    font-size: 100%;
  }
}

li, :not(.pullquote) > p {
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

li {
  /* Hanging punctuation at start of first line interferes with marker. */
  hanging-punctuation: last allow-end;
}

p {
  hanging-punctuation: first allow-end last;
}

/* -------------------------------------------------------------------------- */

body {
  font-variant: oldstyle-nums common-ligatures;
}

/* -------------------------------------------------------------------------- */

abbr,
.byline,
.capped span:first-child,
.roman,
.datelist time,
.gallery .hint .text {
  font-variant-caps: all-small-caps;
}

.capped::first-letter {
  font-variant-caps: normal;
}

/* -------------------------------------------------------------------------- */

/* 13<sup>th</sup> if font supports superscript */
sup {
  font-size: 100%;
  vertical-align: baseline;
}

@supports not (font-variant-position: super) {
  sup {
    -webkit-font-feature-settings: 'sups', var(--font-features-text);
    font-feature-settings: 'sups', var(--font-features-text);
  }
}

@supports (font-variant-position: super) {
  sup {
    font-variant-position: super;
  }
}

/*
 * 13<sup class=ordinal>th</sup> if font supports ordinals,
 * notably English ones. Bely does.
 */
@supports not (font-variant-numeric: ordinal) {
  .ordinal {
    -webkit-font-feature-settings: 'ordn', var(--font-features-text);
    font-feature-settings: 'ordn', var(--font-features-text);
  }
}

@supports (font-variant-numeric: ordinal) {
  .ordinal {
    font-variant-position: normal;
    font-variant-numeric: ordinal;
  }
}

/* -------------------------------------------------------------------------- */

h1, h2, h3 {
  font-variant: lining-nums common-ligatures;
}

.belyssimo h1, .belyssimo h2 {
  font-family: var(--bely-display-fontstack);
}

.belyssimo h3 {
  font-family: var(--bely-fontstack);
  font-style: italic;
}

.bild h1, .bild h2, .bild h3, .bild .pullquote strong {
  font-family: var(--bild-fontstack);
}

.bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
  font-family: var(--bluu-fontstack);
  font-weight: 500;
}

@supports not (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
    -webkit-font-feature-settings: var(--font-features-bluu);
    font-feature-settings: var(--font-features-bluu);
  }
}

@supports (font-variant-alternates: styleset(bluu)) {
  .bruutal h1, .bruutal h2, .bruutal h3, .bruutal .pullquote {
    font-variant-alternates: styleset(bluu);
  }
}

.reforma h1, .reforma h2, .reforma h3 {
  font-family: 'Reforma 2018', var(--system-fontstack);
}

/* ========================================================================== *
 * Keeping Up Appearances
 * ========================================================================== */

abbr[title] {
  border-bottom: none;
  text-decoration: none;
}

body {
  color: var(--color-fg);
  background-color: var(--color-bg);
}

dfn {
  font-style: italic;
}

main {
  display: block;
  margin-bottom: var(--s03);
}

main :is(header, section, .section, footer) {
  display: grid;
  grid-template-columns:
    [view-start wide-start figure-start]
    var(--min-margin)
    [margin-start text-start]
    minmax(0, var(--max-measure))
    [text-end margin-end]
    var(--min-margin)
    [figure-end wide-end view-end];
}

/* calc((var(--max-measure) + 2 * var(--min-margin)) * 131.25%)*/
@media (min-width: 39.375em) {
  main :is(header, section, .section, footer) {
    grid-template-columns:
      [view-start wide-start]
      var(--min-margin)
      [margin-start]
      1fr
      [figure-start text-start]
      minmax(0, var(--max-measure))
      [text-end figure-end]
      1fr
      [margin-end]
      var(--min-margin)
      [wide-end view-end];
  }
}

/* calc((var(--max-measure) + 2 * var(--s50) + 2 * var(--min-margin)) * 131.25%) */
@media (min-width: 59.31em) {
  main :is(header, section, .section, footer) {
    grid-template-columns:
      [view-start]
      var(--min-margin)
      [margin-start]
      1fr
      [wide-start]
      var(--s50)
      [figure-start text-start]
      minmax(0, var(--max-measure))
      [text-end figure-end]
      var(--s50)
      [wide-end]
      1fr
      [margin-end]
      var(--min-margin)
      [view-end];
  }
}

/*@media print {
  main :is(header, section, .section, footer) {
    grid-template-columns:
    [view-start]
    var(--min-margin)
    [margin-start]
    1fr
    [wide-start]
    calc(2 * var(--s50))
    [figure-start text-start]
    minmax(0, var(--max-measure))
    [text-end figure-end]
    [wide-end]
    [margin-end]
    var(--min-margin)
    [view-end];
  }
}*/

main :is(header, section, .section, footer) > * {
  grid-column: text;
}

.cover > :not(.byline) {
  grid-column: view;
  grid-row: 1;
}

/*
 * Another way of expressing the following rule would be through exclusion,
 * e.g., :not(h1):not(h2):not(hgroup) and so on. In other words, all elements
 * requiring special styling would be listed explicitly. Determining the
 * "better" approach probably boils down to the size of the element selector,
 * i.e., pointing towards exclusion instead of the below.
 */
main :is(blockquote, figure, ol, p, ul, .with-inset) + :is(blockquote, figure, ol, p, ul),
main li + li {
  margin-top: var(--margin-text-top);
}

/* Outright remove the top margin from .tight list items again. */
main .tight li:nth-of-type(n+2) {
  margin-top: 0;
}

::-moz-selection {
  background-color: var(--color-selection);
}

::selection {
  background-color: var(--color-selection);
}

.signature {
  text-align: right;
  font-style: italic;
  font-size: var(--s05);
}

.signature::before {
  content: '—';
}

/* ========================================================================== *
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS COMPONENTS
 * ========================================================================== */

/* -------------------------------------------------------------------------- *
 * a:not(.stylish)
 * -------------------------------------------------------------------------- */

a {
  /*
   * When it comes to removing the default semi-transparent grey tap overlay
   * on iOS, "transparent" won't do. However, an alpha of 0 will.
   * https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-_webkit_tap_highlight_color
   */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

a:not(.stylish) {
  transition-property: color, -webkit-text-decoration-color, text-decoration-color, background-color, fill;
  transition-duration: 0.1s;
  transition-timing-function: ease-in;
  text-decoration: underline;
}

a:not(.stylish):link, a:not(.stylish):visited {
  color: var(--color-fg);
  fill: var(--color-fg);
  -webkit-text-decoration-color: var(--color-fg);
  text-decoration-color: var(--color-fg);
  background-color: var(--color-bg);
}

a:not(.stylish):focus, a:not(.stylish):hover {
  outline: none;
  color: var(--color-bg);
  fill: var(--color-bg);
  -webkit-text-decoration-color: transparent;
  text-decoration-color: transparent;
  background-color: var(--color-fg);
}

a:not(.stylish):active {
  color: var(--color-fg);
  fill: var(--color-fg);
  background-color: var(--color-fg);
}

a:focus > picture, a:hover > picture {
  outline: solid var(--t30) var(--color-fg);
}

/* -------------------------------------------------------------------------- *
 * .as-paragraph (flow <p> and <li> into one paragraph with Oxford comma)
 * -------------------------------------------------------------------------- */

.as-paragraph {
  hanging-punctuation: first allow-end last;
}

.as-paragraph p, .as-paragraph ul, .as-paragraph li {
  display: inline;
  list-style: none;
  margin: 0;
  padding: 0;
}

.conjunctive li::after {
  content: ',';
}

.conjunctive li:nth-last-child(2)::after {
  content: ', and ';
}

.conjunctive li:last-child::after {
  content: '.';
}

/* -------------------------------------------------------------------------- *
 * .banner: the art of making banners out of text
 * -------------------------------------------------------------------------- */

/*
 * To create a banner effect, with text typeset against some gradient, the text
 * must be contained in an inline element that is styled as follows:
 *
 * padding: ...;                          Give type breathing room.
 * background-image: ...;                 Specify the gradient.
 * -webkit-box-decoration-break: clone;   Make gradient and padding repeat...
 * box-decoration-break: clone;           ...for each line, even on Safari.
 * background-attachment: fixed;          Make gradient consistent across lines.
 *
 * However, that does not correctly render in Chrome, which has a bug handling
 * a fixed background attachment. If the gradient is horizontal, sizing the
 * background to maximum width of inline element is an effective alternative.
 */
.banner {
  padding: 0 0.2em;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
  background-size: 100vw;
}

/*
 * calc(
 *     var(--max-measure) +
 *     2 * var(--s40) +
 *     2 * var(--min-margin)
 * ) = 29em + 2 * 5.0625em + 1em = 40.125em
 *
 * Adjusted for font size:
 * 40.125em * 131.25% = 52.664em
 */
@media (min-width: 52.664em) {
  .banner {
    background-size: 40.125rem;
  }
}

.background1 {
  background-color: var(--color-accent1);
  background-image: linear-gradient(to right,
    var(--color-accent1), var(--color-accent2));
}

.background2 {
  background-image: linear-gradient(to right,
    /* #87a1ff,
    #9b9cff,
    #ad96ff,
    #bd90ff,
    #cd89ff,
    #dd80ff, */
    #ed75ff,
    #ff66ff,
    #ff6bee,
    #ff6fdf,
    #ff72d2,
    #ff75c6,
    #ff77ba,
    #ff79ae,
    #ff7ba1,
    #ff7d93,
    #ff7f83,
    #ff816f,
    #ff8352,
    #ff8500,
    #f08e00
  );
}

@media screen and (prefers-color-scheme: dark) {
  .background1 {
    background: var(--color-accent1);
  }

  .background2 {
    background: var(--color-accent2);
  }
}

/* -------------------------------------------------------------------------- *
 * .byline
 * -------------------------------------------------------------------------- */

.byline {
  display: flex;
  justify-content: space-between;
  margin-top: var(--s20);
  margin-bottom: var(--s10);
}

address {
  font-style: normal;
}

/* -------------------------------------------------------------------------- *
 * .capped
 * -------------------------------------------------------------------------- */

.drop-count {
  list-style: none;
}

.drop-count li::before {
  content: counter(list-item);
  font-variant: lining-nums;
}

@supports not (initial-letter: 2) {
  .drop-count li::before, .capped::first-letter {
    float: left;
    font-size: 3.3em;
    padding-right: 0.06em;
  }

  .drop-count li::before {
    line-height: 0.8;
    margin-top: 0.008em;
  }

  .capped::first-letter {
    line-height: 0.82;
    padding-top: 0.05em;
  }
}

@supports (not (initial-letter: 2)) and (-moz-appearance: none) {
  .drop-count ::before, .capped::first-letter {
    margin-top: 0.10em;
  }
}

@supports (initial-letter: 2) {
  .drop-count ::before, .capped::first-letter {
    initial-letter: 2;
  }
}

/* -------------------------------------------------------------------------- *
 * .card, .carddeck
 * -------------------------------------------------------------------------- */

/*
 * The non-breaking space in "<h3><a>&nbsp;<span>..." is strictly necessary.
 * Otherwise, Safari treats <a> as empty, doesn’t activate the link, and skips
 * it during keyboard navigation. The non-breaking space is enough of a
 * character to convince Safari of link-worthiness. But it also is easy enough
 * to hide.
 */

/* >>>>>>>>>> The Layout is Flex, but right-aligned and wrapping. <<<<<<<<<< */

main .carddeck {
  grid-column: view;
  margin-top: var(--s20);
  padding-left: 0;
  list-style: none;
}

.card {
  /* Width of iPhone 8 Plus, i.e., 414px. Google Pixel 3 is 411px. */
  max-width: 21.8em;
  position: relative;
  width: 100%;
  margin: var(--s20) auto 0 auto;
}

@media (min-width: 35.625em) {
  .card {
    /* Font size changed already. Switch to sizing via modular scale. */
    max-width: calc(var(--r-minor) * var(--s70)); /* CardMax */
  }
}

/*
 * Break iff: x/2 - MaxMeasure/2 = x - 2 CardMax - 2 S[10]
 *     2 CardMax + 2 S[10] - MaxMeasure/2 = x - x/2
 *     x = 4 CardMax + 4 S[10] - MaxMeasure
 *     x = 4 * 1.2 * 17.0859 + 4 * 1.5 - 29   [em]
 *     x = 82.01232 + 6 - 29   [em]
 *     x = 59.01232   [em]
 *     x = 77.45367 browser root em
 *
 * Setting the padding on the right does not work here because of the
 * vertical scroll bar. Thankfully, setting the width is all that's
 * required, since the box model keeps the box left-aligned by default.
 */
@media (min-width: 77.45em) {
  main .carddeck {
    grid-column: view-start/text-end;
    display: flex;
    flex-wrap: wrap;
    /* Safari and Chrome pretend to accept end, but don't act on it. */
    justify-content: flex-end;
  }

  .card {
    margin: var(--s10) 0 0 var(--s10);
  }
}

/* >>>>>>>>>> The link & hover effect cover entire card. <<<<<<<<<< */

.card > h3 {
  font-family: var(--bely-fontstack);
  /* Make non-breaking space invisible again. See above. */
  font-size: 0;
  margin: 0;
}

.card > h3 > a, .card > h3 > a::before {
  position: absolute;
  inset: 0;
}

/* >>>>>>>>>> The hover effect is opacity only. <<<<<<<<<< */

.card > h3 > a {
  text-decoration: none;
  z-index: 665;
}

.card > h3 > a:focus,
.card > h3 > a:hover {
  outline: none;
}

.card > h3 > a::before {
  content: '';
  font-size: calc(var(--r-minor) * 1rem);
  border: solid var(--t10) var(--color-green);
  opacity: 0;
}

@media screen and (prefers-color-scheme: dark) {
  .card > h3 > a::before {
    border: solid var(--t10) var(--color-accent1);
  }
}

.card > h3 > a:focus::before,
.card > h3 > a:hover::before {
  opacity: 1;
}

/* >>>>>>>>>> The nested headline is presented on top of image. <<<<<<<<<< */

.card > h3 span {
  font-size: calc(var(--r-minor) * 1rem);
  position: absolute;
  top: var(--t15);
  left: var(--t15);
  padding: var(--t50);
  /* Force link color. */
  color: var(--color-fg);
  background-color: var(--color-bg-lifted);
}

@media print {
  .card > h3 span {
    background-color: #fff;
  }
}

/* >>>>>>>>>> Image aspect ratio is normalized to modular rhythm. <<<<<<<<<< */

.card > .image {
  position: relative;
  padding-top: calc(100% / var(--r-major));
  height: 0;
  width: 100%;
  overflow: hidden;
}

@media screen and (prefers-color-scheme: light) {
  .card > .image img, .card > .image iframe {
    filter: grayscale(0.3);
  }
}

/*
 * When absolutely positioning images on an aspect ratio frame,
 * the how matters. object-fit and object-position will not work
 * if top/right/bottom/left was used. Thankfully, top/left/width/height
 * do work.
 */
.card > .image img, .card > .image svg, .card > .image iframe {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

/* >>>>>>>>>> There even is a space for a tagline below the image. <<<<<<<<<< */

.card > .description {
  padding: var(--t05);
  background-color: var(--color-bg-lifted);
  text-align: right;
  line-height: 1;
}

/* -------------------------------------------------------------------------- *
 * .cover
 * -------------------------------------------------------------------------- */

.cover img, .cover hero {
  width: 100vw;
  height: 100vh;
}

@supports (-webkit-touch-callout: none) {
  .cover img, .cover .hero {
    height: -webkit-fill-available;
  }
}

.cover img {
  -o-object-fit: cover;
  object-fit: cover;
}

.cover .title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  line-height: var(--r-minor);
  /*
   * Without the z-index, the title vanishes when enabling dark mode. While
   * certainly surprising, this is the direct result of CSS rules for creating
   * stacking contexts. Notably, the subsequent hero image has a (grey) filter
   * in dark mode. That also creates a new stacking context for the image.
   * Without the title having a z-index, it does not create a stacking context
   * and thus looses out to the image's stacking context. With the z-index, the
   * title not only has its own stacking context but also is closer to the
   * viewer. Arguably, a z-index of 1 would suffice.
   */
  z-index: 665;

  /* Make sure navigation gets pointer events even on small screens. */
  pointer-events: none;
}

.cover h1 {
  padding: 0;
  margin: 0;
}

/* -------------------------------------------------------------------------- *
 * .figure, figcaption
 * -------------------------------------------------------------------------- */

main .figure {
  grid-column: figure;
}

figcaption::before {
  content: '—';
}

figcaption {
  font-size: var(--t05);
  text-align: right;
  font-style: italic;
  padding-top: 0.3em;
}

@supports (-moz-appearance: none) {
  /* Firefox is more precise than Chrome/Safari, needs different constant. */
  figcaption {
    padding-top: 0.25em;
  }
}

/* -------------------------------------------------------------------------- *
 * .gallery
 * -------------------------------------------------------------------------- */

.sprites {
  display: none;
}

main .gallery {
  grid-column: wide;
}

.gallery {
  position: relative;
}

.gallery .images {
  display: flex;
  overflow-x: scroll;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  list-style: none;
}

.gallery .images li {
  margin-top: 0;
  flex: 0 0 100%;
  scroll-snap-align: center;
}

.gallery figcaption::before {
  content: '';
}

.gallery figcaption {
  font-size: 1em;
  padding: 1em 0;
  text-align: center;
  background-color: var(--color-bg-lifted);
}

.gallery .images:focus {
  outline: solid var(--t20) var(--color-fg);
}

.gallery .images:focus:not(:focus-visible) {
  outline: none;
}

.gallery .hint {
  margin: var(--t20) 0;
  font-size: 1em;
  text-align: center;
}

@media (min-width: 35.625em) {
  .gallery .hint {
    font-size: var(--t05);
  }
}

.gallery .hint .arrow {
  -webkit-font-feature-settings: 'ss02';
  font-feature-settings: 'ss02';
  vertical-align: -7%;
}

.gallery .images {
  scrollbar-width: thin;
  scrollbar-color: var(--color-sb-thumb) var(--color-sb-track);
}

.gallery .images::-webkit-scrollbar {
  height: var(--t20);
}

.gallery .images::-webkit-scrollbar-track {
  background-color: var(--color-sb-track);
  border: solid 0.03em var(--color-sb-track-border);
}

.gallery .images::-webkit-scrollbar-thumb {
  background-color: var(--color-sb-thumb);
  border-radius: 100px;
}

.gallery .images::-webkit-scrollbar-thumb:hover {
  background: var(--color-sb-thumb-hover);
}

@media print {
  .gallery .images {
    display: block;
    overflow-x: unset;
    margin-top: var(--s15);
  }

  .gallery .images:focus {
    outline: 0;
  }

  .gallery .images li {
    margin-top: var(--margin-text-top);
  }

  .gallery figcaption {
    padding: var(--t15) 0 var(--s10)
  }

  .gallery .hint {
    display: none;
  }
}

/* -------------------------------------------------------------------------- *
 * h1, h2, and h3
 * -------------------------------------------------------------------------- */

h1, h2, h3 {
  font-style: normal;
  font-weight: normal;
  line-height: var(--r-minor);
}

h1 {
  font-size: var(--s20);
  margin-top: 1rem;
  margin-bottom: calc(var(--r-major) * 1rem);
}

h2 {
  font-size: var(--s10);
  margin-top: calc(var(--r-major) * var(--r-minor) * 1rem);
  margin-bottom: calc(var(--r-minor) * 1rem);
}

h3 {
  font-size: var(--s05);
  margin-top: var(--s05);
  margin-bottom: 1rem;
}

h1 + h2 {
  margin-top: calc(var(--t10) * -1);
}

.bild h2 {
  font-size: var(--s15);
  font-stretch: 95%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

.bild h3 {
  font-size: var(--s10);
  font-style: normal;
  font-stretch: 100%;
  margin-top: calc(var(--r-major) * var(--r-major) * 1rem);
}

@supports (-moz-appearance: none) {
  .bild h2 {
    font-size: calc(var(--r-minor) * var(--s15));
  }

  .bild h3 {
    font-size: calc(var(--r-minor) * var(--s10));
  }
}

/* -------------------------------------------------------------------------- *
 * [hidden], .invisible
 * -------------------------------------------------------------------------- */

[hidden] {
  display: none;
}

/* See https://zellwk.com/blog/hide-content-accessibly/ */
.invisible {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

/* -------------------------------------------------------------------------- *
 * hr
 * -------------------------------------------------------------------------- */

hr {
  color: var(--color-fg);
  border: 0;
  /* Prevent Safari from making <hr> one 1px too large. */
  height: var(--s10);
  text-align: center;
  margin-top: var(--s20);
  margin-bottom: var(--s20);

  --sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);
  --amp: calc(var(--s10) / 4);
  --rot: 10deg;

  transform: translateY(0.5em);
  animation: 10s var(--sine) infinite up-down;
}

hr::after {
  font-size: var(--s05);
  line-height: var(--r-minor);
  display: inline-block;
  content: '⁂';

  transform: rotate(calc(-1 * var(--rot)));
  animation: 10s var(--sine) -6.25s infinite back-forth;
}

/* And action! */
@keyframes up-down { 50% { transform: translateY(calc(-1 * var(--amp))); } }
@keyframes back-forth { 50% { transform: rotate(var(--rot)); } }

/* Respect the user's wishes! */
@media (prefers-reduced-motion: reduce) {
  hr, hr::after {
    animation: none;
    transform: none;
  }
}

/* -------------------------------------------------------------------------- *
 * .inset-left, .inset-right
 * -------------------------------------------------------------------------- */

.with-inset p:first-of-type {
  margin-top: 0;
}

/* The surrounding <div class=with-inset> also contains the floats. */
.with-inset::after {
  content: '';
  clear: both;
}

/*
 * For this class to work, <header>, <section>, and <footer> elements
 * containing such an inset-image must have their max-width and margin
 * set by the container.
 */

.inset-left {
  margin-right: var(--min-margin);
  float: left;
  width: calc(7 * var(--s10));
  max-height: calc(8 * var(--s10));
}

.inset-right {
  margin-left: var(--min-margin);
  float: right;
  width: calc(7 * var(--s10));
  max-height: calc(8 * var(--s10));
}

@supports not (-moz-appearance: none) {
   /* Counteract rounding errors in Safari and Chrome. */
  .inset-left, .inset-right {
    width: calc(7 * var(--s10) - 5px);
  }
}

/* As viewport gets bigger, inset images gradually slide out of the text. */

/* calc((var(--max-measure) + 2 * 1em * 131.25%) */
@media (min-width: 40.6875em) {
  .inset-left {
    margin-left: calc((-100vw + var(--max-measure) + 2em) / 2);
  }

  .inset-right {
    margin-right: calc((-100vw + var(--max-measure) + 3em) / 2);
  }
}

/* calc((var(--max-measure) + 2 * 10.5em + 4 * 1em) * 131.25%) */
@media (min-width: 70.875em) {
  .inset-left {
    /* Not strictly necessary but eliminates weird dev tools appearance. */
    margin-right: 0;
    /* Consider reducing to -7 * s10 - 1em, requires change to .byline. */
    margin-left: calc(-7 * var(--s10) - 1em);
  }
  .inset-right {
    margin-left: 0;
    margin-right: calc(-7 * var(--s10) - 1em);
  }
}

/* -------------------------------------------------------------------------- *
 * ol, ul
 * -------------------------------------------------------------------------- */

.counted {
  padding-left: var(--s20);
}

.counted ::marker {
  content: '(' counter(list-item) ') ';
  font-variant: lining-nums;
}

.references .counted ::marker {
  content: '[' counter(list-item) '] ';
}

.references .counted li {
  overflow-wrap: break-word;
}

.datelist {
  list-style: none;
}

main ul {
  padding-left: var(--s15);
}

/* -------------------------------------------------------------------------- *
 * .page-footer
 * -------------------------------------------------------------------------- */

.page-footer {
  margin: var(--s30) 0 0 0;
  padding: var(--margin-text-top) var(--min-margin);
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  color: var(--color-fg);
  background-color: var(--color-bg-sunk);
  --color-bg: var(--color-bg-sunk);
}

.in-here, .out-there {
  width: 50%;
  line-height: calc(var(--r-major) * var(--r-major));
}

@media (pointer: fine) {
  .in-here, .out-there {
    font-size: var(--t05);
    line-height: var(--r-major);
  }
}

.page-footer h2 {
  font-size: var(--s05);
  font-stretch: 100%; /* Otherwise, Bild becomes too hard to read. */
  margin: var(--t40) 0 var(--t20) 0;
}

.bild .page-footer h2 {
  font-size: var(--s10);
}

.reforma .page-footer h2 {
  font-size: calc(var(--scale-to-reforma) * var(--s05));
}

.page-footer ul {
  list-style: none;
  margin: 0 0 var(--t40) 0;
}

.in-here {
  padding-right: var(--t20);
  border-right: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: right;
}

.out-there {
  padding-left: var(--t20);
  border-left: solid calc(var(--t05) / 2) var(--color-separator);
  text-align: left;
}

.copyright {
  margin-top: var(--margin-text-top);
  font-size: var(--t05);
}

/* Make the page footer sticky on short pages, i.e., error pages. */

html {
  height: 100%;
}

body {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

/*
 * Firefox hates flexbox when it comes to printing,
 * only printing the first page. Nuts!
 */
@media print {
  @supports (-moz-appearance: none) {
    body {
      display: block;
    }
  }
}

/* -------------------------------------------------------------------------- *
 * .page-header
 * -------------------------------------------------------------------------- */

.page-header {
  width: 100%;
  background-color: var(--color-bg-sunk);
  --color-bg: var(--color-bg-sunk);
}

.page-header > ul {
  display: flex;
  list-style: none;
}

.page-header:not(.cornered) > ul {
  max-width: calc(var(--max-measure) + 2 * var(--min-margin));
  margin: 0 auto;
}

/*
 * When using a supports query for the actual padding, Chrome 76 and Firefox 68
 * did apply the padding despite not yet supporting the max() function. With
 * this two-clause query, they do not apply the padding—as they should.
 */
@supports (padding: max(1em)) and (padding: env(safe-area-inset-left)) {
  .page-header > ul {
    padding:
      0 max(env(safe-area-inset-left), 0)
      0 max(env(safe-area-inset-right), 0);
  }
}

.page-header a {
  display: inline-block;
  padding: var(--min-margin);
  text-decoration: none;
}

.page-header li:first-of-type a {
  line-height: 0;
}

.page-header svg {
  height: var(--s10);
  width: var(--s10);
}

.page-header li:nth-of-type(2) {
  font-size: var(--s05);
  line-height: var(--r-minor);
  margin-left: auto;
}

/*
 * Leave a large space between navigation bar and main content.
 * For .page-header.cornered, .byline declares the logical equivalent.
 */
.page-header:not(.cornered) + main {
  margin-top: calc(var(--s30) - var(--margin-text-top));
}

.page-header.cornered {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 665;
  background-color: initial;
  padding: 2vmin;
}

@supports (left: max(1em)) and (left: env(safe-area-inset-left)) {
  .page-header.cornered {
    padding:
      2vmin max(env(safe-area-inset-right), 2vmin)
      2vmin max(env(safe-area-inset-left), 2vmin);
  }
}

/* -------------------------------------------------------------------------- *
 * .pullquote
 * -------------------------------------------------------------------------- */

.pullquote {
  grid-column: wide;
}

.pullquote strong {
  font-size: var(--s20);
  font-weight: normal;
}

.bild .pullquote strong {
  font-stretch: 85%;
}

@supports (-moz-appearance: none) {
  /*
   * In Safari, the pullquote's banner style looks perfectly reasonable
   * with a font size of 2.25em and a line height of 1.5. Notably, it has
   * the right proportion relative to body text in Bely and the gap between
   * lines is about right. In Chrome, that also is the case. In Firefox,
   * however, the font is too small and the gap too large, hence these two
   * adjustments.
   */
  .bild .pullquote strong {
    font-size: calc(var(--r-minor) * var(--s20));
    line-height: var(--r-minor);
  }
}

.reforma .pullquote strong {
  font-size: calc(var(--scale-to-reforma) * var(--s20));
}

/* -------------------------------------------------------------------------- *
 * .quote
 * -------------------------------------------------------------------------- */

blockquote {
  margin-left: var(--s10);
}

blockquote :first-child::before, blockquote :last-child::after {
  font-size: var(--s05);
  line-height: 0;
  position: relative;
}

/*
 * U+275d and U+275e are heavy double turned comma quotes.
 * U+200a is a hair space.
 */
blockquote :first-child::before { content: '\275d'; padding-right: 0.024em; }
blockquote :last-child::after   { content: '\275e'; padding-left:  0.024em; }

/* -------------------------------------------------------------------------- *
 * .section-count
 * -------------------------------------------------------------------------- */

.section-count.start-at-0 {
  counter-reset: h2 -1;
}

.section-count.start-at-1 {
  counter-reset: h2 0;
}

.section-count section {
  counter-increment: h2;
  counter-reset: h3;
}

.section-count h2::before {
  content: counter(h2) '\2002';
}

.section-count h3 {
  counter-increment: h3;
}

.section-count h3::before {
  content: counter(h2) '.' counter(h3) '\2002';
}

footer h2::before, footer h3::before {
  content: none;
}

/* -------------------------------------------------------------------------- *
 * @media print
 * -------------------------------------------------------------------------- */

footer.references {
  display: none;
}

@media print {
  @page {
    margin: 1cm;
  }

  .page-header, .page-footer {
    display: none;
  }

  .page-header:not(.cornered) + main {
    margin-top: 0;
  }

  /* Start snip */
  main :is(header, section, .section, footer) {
    display: block;
  }

  main :is(header, section, .section, footer) > * {
    max-width: var(--max-measure);
  }

  main .cover > :not(.byline) {
    max-width: unset;
  }
  /* End snip */

  main {
    margin-bottom: var(--s20);
  }

  h1, h2, h3 {
    page-break-after: avoid;
    break-after: avoid;
  }

  h2 + * {
    page-break-before: avoid;
    break-before: avoid;
  }

  .cover .title {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }

  figure {
    page-break-inside: avoid;
    break-inside: avoid;
  }

  a {
    text-decoration: none !important;
  }

  /* Support for numbered reference section as article footer. */
  .print-references article {
    counter-reset: href;
  }

  .print-references article a {
    counter-increment: href;
  }

  .print-references article a[href^="https://apparebit.com"],
  .print-references .references a {
    counter-increment: none;
  }

  .print-references article a::after {
    content: ' [' counter(href) ']';
    /* Lining figures look a tad awkward. Omit. */
  }

  .print-references article a[href^="https://apparebit.com"]::after,
  .print-references .references a::after {
    content: none;
  }

  .references {
    display: block;
  }
}
